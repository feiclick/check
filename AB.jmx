<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan-ASI.AB.API" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/octet-stream</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">example.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames"></stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="HomeController" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1495751289000</longProp>
        <longProp name="ThreadGroup.end_time">1495751289000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get-Home Ping" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/get/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-value1" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-823812896">value1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/get/5</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-value" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="111972721">value</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="AgendaBuilderController" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1496025532000</longProp>
        <longProp name="ThreadGroup.end_time">1496025532000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post-blank" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/AgendaBuilder/GetAgenda/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post-GenerateDoc-1 section" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Sections&quot;: [&#xd;
    {&#xd;
      &quot;Fields&quot;: [&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;byteArrayOfImage&quot;,&#xd;
          &quot;Name&quot;: &quot;MainImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;byteArrayOfImage&quot;,&#xd;
          &quot;Name&quot;: &quot;SubImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Main Title&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;MainTitle&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title 1&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: null,&#xd;
            &quot;Color&quot;: &quot;#FFFF660&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;SubTitle1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title2&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;SubTitle2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 1&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 2&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 1&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Text1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 2&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: null,&#xd;
            &quot;Color&quot;: &quot;#00FF7F&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;Text2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 3&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: 10.0,&#xd;
            &quot;Color&quot;: &quot;#FF42225D&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;Text3&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        }&#xd;
      ],&#xd;
      &quot;SectionType&quot;: 0,&#xd;
      &quot;Color&quot;: &quot;#4682b4&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/AgendaBuilder/GetAgenda</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-code" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post-GenerateDoc-Multi-Sections" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Sections&quot;: [&#xd;
    {&#xd;
      &quot;Fields&quot;: [&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;&quot;,&#xd;
          &quot;Name&quot;: &quot;MainImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;&quot;,&#xd;
          &quot;Name&quot;: &quot;SubImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Main Title 1&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;MainTitle&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title 1&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: 15.0,&#xd;
            &quot;Color&quot;: &quot;#FFFF660&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;SubTitle1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title 2&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;SubTitle2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 1&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 2&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 1&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Text1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 2&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Text2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 3&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Text3&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        }&#xd;
      ],&#xd;
      &quot;SectionType&quot;: 0,&#xd;
      &quot;Color&quot;: null&#xd;
    },&#xd;
                &#xd;
    {&#xd;
      &quot;Fields&quot;: [&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;&quot;,&#xd;
          &quot;Name&quot;: &quot;MainImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;&quot;,&#xd;
          &quot;Name&quot;: &quot;SubImage&quot;,&#xd;
          &quot;FieldType&quot;: 1&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Main Title 11&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;MainTitle&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title 11&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: 15.0,&#xd;
            &quot;Color&quot;: &quot;#FFFF660&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;SubTitle1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Sub Title 22&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;SubTitle2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 11&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Title 22&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Title2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 11&quot;,&#xd;
          &quot;Font&quot;: null,&#xd;
          &quot;Name&quot;: &quot;Text1&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 22&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: 12.0,&#xd;
            &quot;Color&quot;: &quot;#F7F34453&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;Text2&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        },&#xd;
        {&#xd;
          &quot;Content&quot;: &quot;Text 33&quot;,&#xd;
          &quot;Font&quot;: {&#xd;
            &quot;Size&quot;: null,&#xd;
            &quot;Color&quot;: &quot;#FF42225D&quot;&#xd;
          },&#xd;
          &quot;Name&quot;: &quot;Text3&quot;,&#xd;
          &quot;FieldType&quot;: 0&#xd;
        }&#xd;
      ],&#xd;
      &quot;SectionType&quot;: 0,&#xd;
      &quot;Color&quot;: &quot;#4682b4&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.22.175.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/AgendaBuilder/GetAgenda</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion-code" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
