using System;

using System.Collections.Generic;

using System.Linq;

using System.Text;

using DocumentFormat.OpenXml.Wordprocessing;

using DocumentFormat.OpenXml.Packaging;

namespace testpj
{
    class Program
    {

        //Microsoft.Office.Interop.Excel.Range rang = null;
        //bool isMerge = (bool)rang.MergeCells;


        static void Main(string[] args)//public string GetCellFromWordTable(int NUM1,int NUM2) 
        {
            using (WordprocessingDocument doc = WordprocessingDocument.Open(
            @"E:\Resource\Template\1.docx", false))
            {
               // int Row1 = 2, Col2 = 2;
                int n1 = 0, n2 = 0;

               
                
                // 1st table
                Table tb1 = doc.MainDocumentPart.Document.Body.GetTables()[0];
                // table Rows
                var rows = tb1.GetTableRows();
                for (int i = 0; i < rows.Length; i++)
                {
                    // table cells
                    var cells = rows[i].GetTableCells();
                    // show the content
                       if (n1 == Row1 - 1)
                          {
                    for (int j = 0; j < cells.Length; j++)
                    {

                        if (n2 == NCol2 - 1) Console.WriteLine("Row:{0} Cell:{1} Value={2}", i, j, cells[j].GetTableCellContent());
                            //return cells[j].GetTableCellContent();
                            n2++;
                    }

                      }
                    n1++;
                }
                Console.Read();
            }
        }

    }
    public static class DocxTableExt
    {
        public static Table[] GetTables(this Body body)
        {
            return body.Elements<Table>().ToArray();
        }
        public static TableRow[] GetTableRows(this Table tb1)
        {
            return tb1.Elements<TableRow>().ToArray();
        }
        public static TableCell[] GetTableCells(this TableRow tr)
        {
            return tr.Elements<TableCell>().ToArray();
        }
        public static string GetTableCellContent(this TableCell td)
        {
            return string.Join("\n", td.Elements<Paragraph>().Select(o => o.InnerText).ToArray());
        }
    }

}

