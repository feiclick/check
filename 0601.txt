using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ASI.AB.API Tests
{
    [TestClass]
    public class AgendaBuilderAPI
    {
        [TestMethod]
        public void PingHome()
        {
            
           var client = new RestClient("http://localhost:8080/home/get/");

           var request = new RestRequest(Method.GET);

         IRestResponse reponse = client.Execute(request);
         return response.Data;


            //request.AddHeader("header", "value");

           var response = client.Execute(request) as RestResponse;

          if (response != null && ((response.StatusCode == HttpStatusCode.OK)))
         {
         var arr = JsonConvert.DeserializeObject<JArray>(response.Content);
         }
          else if (response != null)
         {
         MessageBox.Show(string.Format
         ("Status code is {0} ({1}); response status is {2}",
                response.StatusCode, response.StatusDescription, response.ResponseStatus));
         }  
     }


          [TestMethod]

          public void Create (Agenda agenda)
            {
              var client = new RestClient("http://localhost:8080/AgendaBuilder/GetAgenda/");

              client.AddHandler("application/octet-stream", new RestSharp.Deserializers.JsonDeserializer());
              var request = new RestRequest(Method.POST);
              request.AddHeader("Content-Type", "application/octet-stream");
   
          

           [TestMethod]
         
           public void Create (Agenda parameter)
            {
              var client = new RestClient("http://localhost:8080/AgendaBuilder/GetAgenda/");

              client.AddHandler("application/octet-stream", new RestSharp.Deserializers.JsonDeserializer());
              var request = new RestRequest(Method.POST);
              request.AddHeader("Content-Type", "application/octet-stream");
              request.AddParameter("Content","Main Title");

            //call 



             }
           

            
   

}


       /* // Arrange
        var controller = new HomeController();
        controller.Request = new HttpRequestMessage();
        controller.Configuration = new HttpConfiguration();

        // Act
        var response = controller.Get();

        // Assert
        Home home;
        Assert.IsTrue(response.TryGetContentValue<value>(out value));
            Assert.AreEqual(value, );
            */
//////////////////////////////
   
private void CallRestNotesAttachment(string ext, string mime)   
{   
      var restClient = new RestClient("http://localhost:1608/Rest.svc/NotesAttachment");   
      restClient.AddHandler("application/octet-stream", new RestSharp.Deserializers.JsonDeserializer());   
      var request = new RestRequest(Method.POST);   

      request.AddHeader("Content-Type", "application/octet-stream");   
      Dictionary<string, object> dict = new Dictionary<string, object>();   
      dict.Add("FILE_EXT", ext);   
      dict.Add("FILE_MIME_TYPE", mime);   
      byte[] imageBytes;   
      using (FileStream fs = File.Open(@"C:\Users\anand.thakur\Desktop\1.wmv", FileMode.Open))   
      {   
          imageBytes = new BinaryReader(fs).ReadBytes((int)fs.Length);   
      }   
      string image = Convert.ToBase64String(imageBytes);   
      dict.Add("IMAGE_DATA", image);   
      byte[] data = Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(dict));   
      request.AddParameter("application/octet-stream", data, ParameterType.RequestBody);   
      var response = restClient.Execute(request);   

      JavaScriptSerializer json = new JavaScriptSerializer();   

      Dictionary<string, object> dict1 = json.Deserialize<Dictionary<string, object>>(response.Content);   
      MessageBox.Show("done");   
  }  





