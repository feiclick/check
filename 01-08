using System;

using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ASI.CEI.APITests
{
    [TestClass]
    public class CeiApiTests
    {
        public RestClient restClient;
        public RestRequest restRequest;

        public void TestInitialize()
        {
            restClient = new RestClient("http://cei-test.jss.org/");
            restRequest = new RestRequest("api/cei/submit/", Method.POST);
        }

        [TestMethod]
        //1. API_PersonalDetails_Service Component_is required
        public void API_without_ServiceComponent_Validation_message_should_displayed()
        {
            restRequest.RequestFormat = DataFormat.Json;

            a = PersonalDetail()

            //request
            var cei = new CeiModel
            {
                {a; },
            
                Employment = new List<EmploymentModel>
                {
                    new PartTimeEmploymentModel
                    {
                        SocCode = "SocCode",
                        EmploymentTypeId = EmploymentType.Constants.PartTimeId,
                        CountryTypeId = CountryType.Constants.USAId,
                        StateTypeId = StateType.Constants.AlabamaId,
                        IsSelfEmployed = false,
                        YourPosition = "SomePosition",
                        IsCurrentPosition = false,
                        DatePositionBegan = DateTime.UtcNow,
                        DatePositionEnd = DateTime.UtcNow,
                        EmployerName = "EmployerName",
                        EmployerAddress = "EmployerAddress",
                        EmployerAddress2 = "EmployerAddress2",
                        EmployerCity = "EmployerCity",
                        EmployerZipCode = "12345"
                    }

                }
            };

            var json = restRequest.JsonSerializer.Serialize(cei);
            restRequest.AddParameter("application/json; charset=utf-8", json, ParameterType.RequestBody);
            IRestResponse restResponse = restClient.Execute(restRequest);
            var resultdata = restResponse.Content;

            //assert
            Assert.AreEqual(HttpStatusCode.BadRequest, restResponse.StatusCode);
            StringAssert.Contains(resultdata, "The MilitaryComponentTypeId field is required.");

        }


        public string PersonalDetail(string dod, string state, string unit, string email, string responder)
        {
            string a = new PersonModel
            {
                DodId = dod;
            StateTypeId = state;
            Unit = unit;
            Email = email;
            IsFirstResponder = responder;
        }
           
         
            
  
     }
          
           return a;
        }


           
        
                
             
       
    }
}

////////////
//https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/enum
    


