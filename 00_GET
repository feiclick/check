
[TestMethod]
        //Positive_15. Validate Student Employment type
        public void API_Student_Employment_cei_should_be_work_correctly()
        {
            restRequest.RequestFormat = DataFormat.Json;

            //request
            var cei = GetTestCeiModel();
            var student = GetTestStudentEmploymentModel();
            cei.Employment = new List<EmploymentModel>
            {
                student
            };

            var json = restRequest.JsonSerializer.Serialize(cei);
            restRequest.AddParameter("application/json; charset=utf-8", json, ParameterType.RequestBody);

            IRestResponse restResponse = restClient.Execute(restRequest);
            Assert.AreEqual(HttpStatusCode.OK, restResponse.StatusCode);
        }



            var resultdata = restResponse.Content;
            StringAssert.Contains(resultdata, "The DatePositionEnd field is required.");
            
            //POST p = new POST();
            string personid= p.SubmitCEI();
                     
            restClient = new RestClient("https://cei-test.jointservicessupport.org/api/cei/GetData?apiKey=19db64da-851b-4d72-abf6-08a21a78dd58&personId=");
            restRequest = new RestRequest($"{personId}"+"&dodId=0123456789/", Method.GET);

            //assert
            Assert.AreEqual(cei.PersonalDetails.MilitaryComponentTypeId,MilitaryComponentType.Constants.AirNationalGuardId);
            Assert.AreEqual(cei.PersonalDetails.StateTypeId, StateType.Constants.NewYorkId);

           // string content = resultdata;

          //  var content = JsonConvert.DeserializeObject<Content>(resultdata);
           

            //const string content = "{\"one\":\"oneOneOne\", \"two\":\"twoTwoTwo\", \"three\":3}";
            JsonDeserializer json2 = new JsonDeserializer();

          // output = json2.Deserialize<>(new RestResponse { Content = content });


restResponse.Content = "{\"Success\":true,\"Message\":null,\"Content\":\"d1d99bb5-9226-7d22-c5d3-11e7812d5a4a\"}"

public class RestMessage{
    public string Success{ get; set; }
    public string message{ get; set; }
     public string Content{ get; set; }
}

///////console app/////
    class Program
    {
        static void Main(string[] args)
        {
            //string data = response.Content;
            //"{\"Success\":true,\"Message\":null,\"Content\":\"d1d99bb5-9226-7d22-c5d3-11e7812d5a4a\"}"
            string data = @"{""Success"":""true"",""Message"":""null"",""Content"":""d1d99bb5-9226-7d22-c5d3-11e7812d5a4a""}";

            Dictionary<string, object> values = JsonConvert.DeserializeObject<Dictionary<string, object>>(data);

            object test;
            if (values.TryGetValue("Content", out test)) // Returns true.
            {
                Console.WriteLine(test); // This is the value at key1.
                Console.ReadKey();
            }
        }
    }
    ///////////
