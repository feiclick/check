using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using RestSharp;
using System.IO;
using SautinSoft.Document;
using SautinSoft.Document.Drawing;
using System.Net;





namespace Document_Api
{
    [TestClass]
    public class DocumentApiTest
    {
        public RestClient restClient;
        public RestRequest restRequest;
        //public string savePath = "C:\\AgendaBuilder\\API_Help\\api_help.html";
        enum TagType
            {
                SmallerThan, // <
                GreaterThan  // >
            }

        [TestInitialize]
        public void TestInitialize()
        {
            // will be replaced by reading value from a file 
            restClient = new RestClient("http://172.22.174.179");
            restRequest = new RestRequest("/Help", Method.GET);

        }
        [TestMethod]
        // valdate Document API help page
        public void Verify_API_help_Doc_home()
        {

            // ACT
            IRestResponse restResponse = restClient.Execute(restRequest);


            //Assert statusCode-200, 404

            Assert.AreEqual(HttpStatusCode.OK, restResponse.StatusCode);
            Assert.AreNotEqual(HttpStatusCode.NotFound, restResponse.StatusCode);

            //validate html tag

            restResponse.GetType();

            Assert.AreEqual();
            
        }



        public static bool IsValid(string html)
        {
            TagType expected = TagType.SmallerThan; // Must start with <
            for (int i = 0; i < html.Length; i++) // Loop
            {
                bool smallerThan = html[i] == '<';
                bool greaterThan = html[i] == '>';
                if (!smallerThan && !greaterThan) // Common case
                {
                    continue;
                }
                if (smallerThan && expected == TagType.SmallerThan) // If < and expected continue
                {
                    expected = TagType.GreaterThan;
                    continue;
                }
                if (greaterThan && expected == TagType.GreaterThan) // If > and expected continue
                {
                    expected = TagType.SmallerThan;
                    continue;
                }
                return false; // Disallow
            }
            return expected == TagType.SmallerThan; // Must expect <
        }


    }











}




//save html file
//byte[] response = restClient.DownloadData(restRequest);
//File.WriteAllBytes(savePath, response);

// open html file System.Diagnostics.Process.Start("iexplore", "C:\\AgendaBuilder\\API_Help\\api_help.html");
